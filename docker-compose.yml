services:
    ###############################
    ##  CORE
    ###############################

    core_mongodb:
        build: ./core/mongodb
        command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
        expose:
            - "27017"
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'core_mongodb:27017'}]}) }" | mongosh --port 27017 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        networks:
            - server_network

    core_redis:
        image: redis:7.4.0-alpine
        expose:
            - "6379"
        networks:
            - server_network

    nginx:
        image: nginx:1.27.2-alpine
        ports:
            - "${PUBLIC_PORT}:80"
        volumes:
            - ./core/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - access_point
            - communication
        networks:
            - server_network

    access_point:
        build: ./core/access_point
        expose:
            - "3000"
        environment:
            - APP_NAME=${APP_NAME}
            - APP_REGISTRY_KEY=${APP_REGISTRY_KEY}
            - ENV=${ENV}
            - ORIGIN=${PUBLIC_ORIGIN}
            - CLIENT_URL=${CLIENT_URL}
            - REDIS_URI=redis://core_redis:6379
            - MONGO_URI=mongodb://core_mongodb:27017/?replicaSet=rs0
            - COMMUNICATION_API_URL=http://communication:3002/api/v1
            - ACCESS_CONTROL_API_URL=http://access_control:3001/api/v1
        env_file:
            - ./core/access_point/.env
        depends_on:
            - core_redis
            - core_mongodb
        networks:
            - server_network

    access_control:
        build: ./core/access_control
        expose:
            - "3001"
        environment:
            - APP_NAME=${APP_NAME}
            - APP_REGISTRY_KEY=${APP_REGISTRY_KEY}
            - ENV=${ENV}
            - ORIGIN=http://access_control:3001
            - CLIENT_URL=${CLIENT_URL}
            - REDIS_URI=redis://core_redis:6379
            - MONGO_URI=mongodb://core_mongodb:27017/?replicaSet=rs0
            - ACCESS_POINT_API_URL=http://access_point:3000/api/v1
        env_file:
            - ./core/access_control/.env
        depends_on:
            - access_point
        networks:
            - server_network

    communication:
        build: ./core/communication
        expose:
            - "3002"
        environment:
            - APP_NAME=${APP_NAME}
            - APP_REGISTRY_KEY=${APP_REGISTRY_KEY}
            - ENV=${ENV}
            - ORIGIN=http://communication:3002
            - CLIENT_URL=${CLIENT_URL}
            - REDIS_URI=redis://core_redis:6379
            - MONGO_URI=mongodb://core_mongodb:27017/?replicaSet=rs0
            - ACCESS_POINT_API_URL=http://access_point:3000/api/v1
        env_file:
            - ./core/communication/.env
        depends_on:
            - access_point
            - access_control
        networks:
            - server_network

    ###############################
    ##  SERVICES
    ###############################

    service_mongodb:
        image: mongo:noble
        command: ["--replSet", "rs1", "--bind_ip_all", "--port", "27018"]
        expose:
            - "27018"
        healthcheck:
            test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs1',members:[{_id:0,host:'service_mongodb:27018'}]}) }" | mongosh --port 27018 --quiet
            interval: 5s
            timeout: 30s
            start_period: 0s
            start_interval: 1s
            retries: 30
        networks:
            - server_network

    service_redis:
        image: redis:7.4.0-alpine
        expose:
            - "6379"
        networks:
            - server_network

    academic_service:
        build: ./applications/academic_service
        expose:
            - "3010"
        environment:
            - APP_NAME=${APP_NAME}
            - APP_REGISTRY_KEY=${APP_REGISTRY_KEY}
            - ENV=${ENV}
            - ORIGIN=http://academic_service:3010
            - CLIENT_URL=${CLIENT_URL}
            - REDIS_URI=redis://service_redis:6379
            - MONGO_URI=mongodb://service_mongodb:27018/?replicaSet=rs1
            - ACCESS_POINT_API_URL=http://access_point:3000/api/v1
            - COMMUNICATION_API_URL=http://communication:3002/api/v1
            - ACCESS_CONTROL_API_URL=http://access_control:3001/api/v1
        env_file:
            - ./applications/academic_service/.env
        depends_on:
            - access_point
            - access_control
        networks:
            - server_network

networks:
    server_network:
        driver: bridge
